{"version":3,"file":"static/js/535.84f14b8a.chunk.js","mappings":"wRAiBA,MAAMA,EAAU,mHAAyBC,MAAM,KAAKC,KAAKC,IAAK,CAAOA,YAC/DC,EAAY,qMAA0CH,MAAM,KAAKC,KAAKC,IAAK,CAAOA,YAClFE,EAAiB,CACnBC,SAAU,CAEN,EAEJC,WAAY,CACRC,GAAI,CAACC,KAAM,IACXC,GAAI,CAACD,KAAM,MA2InB,EA9HsBE,KACnB,IAAIC,GAAQC,EAAAA,EAAAA,MACX,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAA0C,CACpE,CACIC,MAAO,2BACPC,UAAW,OACXC,OAASC,IAASC,EAAAA,EAAAA,KAAA,KAAAC,SAAIF,IACtBG,QAASX,EAAOY,OAChBC,SAAUA,CAACtB,EAAYuB,IAAWA,EAAOC,KAAKC,WAAWzB,GACzD0B,cAAc,GAElB,CACIZ,MAAO,2BACPC,UAAW,SAGf,CACID,MAAO,eACPC,UAAW,YAEf,CACID,MAAO,2BACPC,UAAW,UACXY,IAAK,WAET,CACIb,MAAO,SACPa,IAAK,SACLX,OAAQA,CAACY,EAAGL,KACRL,EAAAA,EAAAA,KAACW,EAAAA,EAAK,CAACC,KAAK,SAAQX,UAChBD,EAAAA,EAAAA,KAACa,EAAAA,EAAU,CAACjB,MAAM,kBAAkBkB,UAAWA,IAAMC,EAAKV,EAAOW,YAAYf,UACzED,EAAAA,EAAAA,KAAA,KAAAC,SAAG,mBAMhBgB,EAAMC,IAAWvB,EAAAA,EAAAA,UAAqBJ,EAAO0B,KAAKE,YAClDC,EAAKC,GAAiBC,EAAAA,GAAaC,kBAYpCC,EAAUC,IACZ,IAAIC,EAASD,EAAKC,OAAO7C,KAAI,CAAC8C,EAAgBC,KACnC,CACHnB,IAAImB,EAAM,GACVtB,KAAMqB,EAAKE,aACXC,QAASH,EAAKI,SACdC,MAAOL,EAAKM,cACZC,SAAUP,EAAKO,SACflB,WAAWW,EAAKX,eAIpBW,EAAOlC,EAAS,GACpBkC,EAAKzB,QAAUwB,EAAO7C,KAAK8C,IAAS,CAAO5B,KAAM4B,EAAKrB,KAAMxB,MAAO6C,EAAKrB,SACjE,OAAPb,QAAO,IAAPA,GAAAA,EAAS0C,OAAO,EAAG,EAAGR,GACtB,IAAIS,EAAa,OAAP3C,QAAO,IAAPA,OAAO,EAAPA,EAASZ,KAAK8C,GAASA,IACjCjC,EAAW0C,GACXlB,EAAQQ,EAAOP,UAAU,EAEvBJ,EAAOsB,UACT,MAAMC,QAAYC,EAAAA,EAAAA,IAAW9B,GACV,KAAhB6B,EAAIE,YAEHC,EAAQ,gEACRjB,EAAOc,IAIPI,EAAQ,+DAAa,EAEvBD,EAAWE,IACbvB,EAAIwB,KAAK,CACLC,QAAS,2BACTF,cACAG,MAAM9C,EAAAA,EAAAA,KAAC+C,EAAAA,EAAa,CAACC,MAAO,CAACC,MAAO,aACpCC,UAAW,WACb,EAEAR,EAAWC,IACbvB,EAAIwB,KAAK,CACLC,QAAS,2BACTF,cACAG,MAAM9C,EAAAA,EAAAA,KAACmD,EAAAA,EAAa,CAACH,MAAO,CAACC,MAAO,aACpCC,UAAW,WACb,EAEN,OACIE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAApD,SAAA,CACKoB,GACD+B,EAAAA,EAAAA,MAACE,EAAAA,EAAI,CAACC,SA3DClB,UACX,MAAM,QAACP,EAASE,OAAQlD,MAAOkD,GAAM,KAAE1B,EAAM4B,UAAWpD,MAAOoD,IAAapD,EACtEwD,QAAuCkB,EAAAA,EAAAA,IAAY,CAAC1B,UAASE,QAAO1B,OAAM4B,aAC1D,KAAlBI,EAAIE,YACJC,EAAQ,uCAADgB,OAAUnD,IACjBkB,EAAOc,IAEPI,EAAQ,yDACZ,EAmD4BgB,UAAW,kCAAoC1E,EAAgB2E,QAAQ,SAAQ1D,SAAA,EACnGD,EAAAA,EAAAA,KAACsD,EAAAA,EAAKM,KAAI,CAACF,UAAW,SAAUG,MAAM,2BAAOvD,KAAK,OACvCwD,MAAO,CAAC,CAACC,UAAU,EAAMlB,QAAS,kBAAkB5C,UAC3DD,EAAAA,EAAAA,KAACgE,EAAAA,EAAK,OAEVhE,EAAAA,EAAAA,KAACsD,EAAAA,EAAKM,KAAI,CAACF,UAAW,SAAUO,aAActF,EAAQ,GAAIkF,MAAM,2BAAOvD,KAAK,QACjEwD,MAAO,CAAC,CAACC,UAAU,EAAMlB,QAAS,sDAAc5C,UACvDD,EAAAA,EAAAA,KAACkE,EAAAA,EAAM,CAACC,cAAY,EAACxF,QAASA,OAElCqB,EAAAA,EAAAA,KAACsD,EAAAA,EAAKM,KAAI,CAACF,UAAW,iBAAkBO,aAAclF,EAAW,GAAI8E,MAAM,eAAKvD,KAAK,WAC1EwD,MAAO,CAAC,CAACC,UAAU,EAAMlB,QAAS,0CAAY5C,UACrDD,EAAAA,EAAAA,KAACkE,EAAAA,EAAM,CAACC,cAAY,EAACxF,QAASI,OAElCiB,EAAAA,EAAAA,KAACsD,EAAAA,EAAKM,KAAI,CAACF,UAAW,SAAUG,MAAM,2BAAOvD,KAAK,UACvCwD,MAAO,CAAC,CAACC,UAAU,EAAMlB,QAAS,sDAAc5C,UACvDD,EAAAA,EAAAA,KAACgE,EAAAA,EAAK,OAEVhE,EAAAA,EAAAA,KAACoE,EAAAA,GAAM,CAACC,KAAK,UAAUC,SAAS,SAAQrE,SAAC,qBAI7CD,EAAAA,EAAAA,KAACuE,EAAAA,EAAK,CAACb,UAAW,aAAcc,YAAY,EAAO/E,QAASA,EAASgF,WAAYxD,IAAO,MAEzF,C","sources":["components/hospital/index.tsx"],"sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\r\nimport {\r\n    Button,\r\n    Cascader,\r\n    DatePicker,\r\n    Form,\r\n    Input,\r\n    InputNumber,\r\n    Mentions,\r\n    notification, Popconfirm,\r\n    Select, Space, Table, TableProps, Tag,\r\n    TreeSelect,\r\n} from 'antd';\r\nimport {deleteById, getHospitalList, postManager} from \"@/utility/http\";\r\nimport {FrownOutlined, SmileOutlined} from \"@ant-design/icons\";\r\nimport {useLoaderData} from \"react-router-dom\";\r\n\r\nconst options = '三级甲等 三级乙等 二级甲等 二级乙等 一级'.split(' ').map((value) => ({value}))\r\nconst provinces = '四川省 湖北省 湖南省 上海市 北京市 贵州省 云南省 广东省 广西壮族自治区'.split(' ').map((value) => ({value}))\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        // xs: {span: 24},\r\n        // sm: {span: 10},\r\n    },\r\n    wrapperCol: {\r\n        xs: {span: 24},\r\n        sm: {span: 14},\r\n    },\r\n};\r\n\r\ninterface DataType {\r\n    key: string;\r\n    name: string;\r\n    level: number;\r\n    address: string;\r\n    province: string;\r\n    hospitalId:string\r\n}\r\n\r\nconst App: React.FC = () => {\r\n   let loader= useLoaderData() as any\r\n    const [columns, setColumns] = useState<TableProps<DataType>['columns']>([\r\n        {\r\n            title: '医院名称',\r\n            dataIndex: 'name',\r\n            render: (text) => <a>{text}</a>,\r\n            filters: loader.filter,\r\n            onFilter: (value: any, record) => record.name.startsWith(value),\r\n            filterSearch: true,\r\n        },\r\n        {\r\n            title: '医院等级',\r\n            dataIndex: 'level',\r\n        },\r\n\r\n        {\r\n            title: '省份',\r\n            dataIndex: 'province',\r\n        },\r\n        {\r\n            title: '详细地址',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n        },\r\n        {\r\n            title: 'Action',\r\n            key: 'action',\r\n            render: (_, record) => (\r\n                <Space size=\"middle\">\r\n                    <Popconfirm title=\"Sure to delete?\" onConfirm={() => drop(record.hospitalId)}>\r\n                        <a>Delete</a>\r\n                    </Popconfirm>\r\n                </Space>\r\n            ),\r\n        },\r\n    ])\r\n    const [data, setData] = useState<DataType[]>(loader.data.reverse())\r\n    const [api, contextHolder] = notification.useNotification();\r\n    /* 提交按钮回调,获取所有内容 */\r\n    const finish = async (value: any) => {\r\n        const {address, level: {value: level}, name, province: {value: province}} = value\r\n        const res: format.Result<Addition[]> = await postManager({address, level, name, province})\r\n        if (res.statusCode == 200) {\r\n            success(`你成功添加了${name}`)\r\n            getAll(res)\r\n        } else {\r\n            blunder('请检查是否输入正确')\r\n        }\r\n    }\r\n    const getAll = (json: any) => {\r\n        let result = json.result.map((item: Addition, index: number) => {\r\n            return {\r\n                key:index+'',\r\n                name: item.hospitalName,\r\n                address: item.position,\r\n                level: item.hospitalLevel,\r\n                province: item.province,\r\n                hospitalId:item.hospitalId,\r\n            }\r\n\r\n        })\r\n        let item = columns![0]\r\n        item.filters = result.map((item: any) => ({text: item.name, value: item.name}))\r\n        columns?.splice(0, 1, item)\r\n        let arr = columns?.map((item) => item)\r\n        setColumns(arr)\r\n        setData(result.reverse())\r\n    }\r\n    const drop = async (key: any) => {\r\n        const res = await deleteById(key)\r\n        if(res.statusCode==200)\r\n        {\r\n            success('成功删除了该医院数据')\r\n            getAll(res)\r\n        }\r\n\r\n        else\r\n            blunder('网络繁忙，请稍后重试')\r\n    }\r\n    const success = (description: string) => {\r\n        api.open({\r\n            message: '操作成功',\r\n            description,\r\n            icon: <SmileOutlined style={{color: '#108ee9'}}/>,\r\n            placement: 'topLeft'\r\n        })\r\n    }\r\n    const blunder = (description: string) => {\r\n        api.open({\r\n            message: '操作错误',\r\n            description,\r\n            icon: <FrownOutlined style={{color: '#108ee9'}}/>,\r\n            placement: 'topLeft'\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            {contextHolder}\r\n            <Form onFinish={finish} className={' flex flex-row justify-start'} {...formItemLayout} variant=\"filled\">\r\n                <Form.Item className={'flex-1'} label=\"医院名称\" name=\"name\"\r\n                           rules={[{required: true, message: 'Please input!'}]}>\r\n                    <Input/>\r\n                </Form.Item>\r\n                <Form.Item className={'flex-1'} initialValue={options[0]} label=\"医院等级\" name=\"level\"\r\n                           rules={[{required: true, message: '医院名称不能为空!'}]}>\r\n                    <Select labelInValue options={options}/>\r\n                </Form.Item>\r\n                <Form.Item className={'flex-1 w-[80%]'} initialValue={provinces![0]} label=\"省份\" name=\"province\"\r\n                           rules={[{required: true, message: '省份不能为空!'}]}>\r\n                    <Select labelInValue options={provinces}/>\r\n                </Form.Item>\r\n                <Form.Item className={'flex-1'} label=\"详细地址\" name=\"address\"\r\n                           rules={[{required: true, message: '详细地址不能为空!'}]}>\r\n                    <Input/>\r\n                </Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    创建\r\n                </Button>\r\n            </Form>\r\n            <Table className={'border-r-0'} pagination={false} columns={columns} dataSource={data}/>;\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;"],"names":["options","split","map","value","provinces","formItemLayout","labelCol","wrapperCol","xs","span","sm","App","loader","useLoaderData","columns","setColumns","useState","title","dataIndex","render","text","_jsx","children","filters","filter","onFilter","record","name","startsWith","filterSearch","key","_","Space","size","Popconfirm","onConfirm","drop","hospitalId","data","setData","reverse","api","contextHolder","notification","useNotification","getAll","json","result","item","index","hospitalName","address","position","level","hospitalLevel","province","splice","arr","async","res","deleteById","statusCode","success","blunder","description","open","message","icon","SmileOutlined","style","color","placement","FrownOutlined","_jsxs","_Fragment","Form","onFinish","postManager","concat","className","variant","Item","label","rules","required","Input","initialValue","Select","labelInValue","Button","type","htmlType","Table","pagination","dataSource"],"sourceRoot":""}