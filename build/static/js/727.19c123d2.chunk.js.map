{"version":3,"file":"static/js/727.19c123d2.chunk.js","mappings":"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","sources":["components/医生后台/index.tsx"],"sourcesContent":["import React, { Fragment, ReactNode, useEffect, useRef, useState } from \"react\";\r\nimport { Link, Outlet, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Layout,\r\n  Upload,\r\n  notification,\r\n  Flex,\r\n  Menu,\r\n  Breadcrumb,\r\n  Space,\r\n  Modal,\r\n  Form,\r\n  Input,\r\n  Dropdown,\r\n  Avatar,\r\n  Button,\r\n} from \"antd\";\r\nimport type { UploadProps } from \"antd\";\r\nimport {\r\n  AppstoreOutlined,\r\n  CalendarOutlined,\r\n  LinkOutlined,\r\n  MailOutlined,\r\n  UserOutlined,\r\n  FrownOutlined,\r\n  SmileOutlined,\r\n  UserSwitchOutlined,\r\n  InboxOutlined,\r\n  QuestionOutlined,\r\n} from \"@ant-design/icons\";\r\nimport type { MenuProps } from \"antd/es/menu\";\r\nimport { useAppDispatch, useAppSelector } from \"@/store/hooks\";\r\nimport { setStatus } from \"@/features/login/loginSlice\";\r\nimport TextArea, { TextAreaRef } from \"antd/es/input/TextArea\";\r\nimport { postFallback } from \"@/utility/http\";\r\ntype MenuItem = Required<MenuProps>[\"items\"][number];\r\nconst { Header, Sider, Content } = Layout;\r\nconst getItem = (\r\n  label: React.ReactNode,\r\n  key?: React.Key | null,\r\n  icon?: React.ReactNode,\r\n  children?: MenuItem[]\r\n): MenuItem => ({ key, icon, children, label } as MenuItem);\r\nconst { Dragger } = Upload;\r\nconst App: React.FC = () => {\r\n  /*反馈信息*/\r\n  const errors = useRef<TextAreaRef>(null);\r\n  /*loading……*/\r\n  const [loadings, setLoadings] = useState<boolean>(false);\r\n  // 提示框\r\n  const [api, contextHolder] = notification.useNotification();\r\n  // 文件上传列表\r\n  const [show, setShow] = useState<boolean>(false);\r\n  // 头像点击后选择的哪一项 true:上传头像    false：反馈给管理员\r\n  const [check, setCheck] = useState<boolean>(true);\r\n  // 事件触发器\r\n  const dispatch = useAppDispatch();\r\n  const user = useAppSelector((state) => state.login.doth);\r\n  // 上传文件\r\n  const props: UploadProps = {\r\n    showUploadList: show,\r\n    maxCount: 1,\r\n    accept: \"image/*\",\r\n    name: \"file\",\r\n    multiple: true,\r\n    action: `http://134.175.81.248:5000/upload?username=${user.username}&password=${user.password}`,\r\n    onChange(info) {\r\n      setShow(true);\r\n      const { status } = info.file;\r\n      if (status !== \"uploading\") {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n      if (status === \"done\") {\r\n        // 上传到服务器了\r\n        const { response } = info.file;\r\n        if (response.statusCode == 200) {\r\n          success(\"你成功的上传了头像，已经为你更新！\");\r\n          dispatch(setStatus({ avatarPath: response.result.url }));\r\n          // 设置头像\r\n        }\r\n      } else if (status === \"error\") {\r\n        blunder(`${info.file.name} 文件上传失败`);\r\n      }\r\n    },\r\n    onDrop(e) {\r\n      console.log(\"Dropped files\", e.dataTransfer.files);\r\n    },\r\n  };\r\n  // 导航\r\n  const navigate = useNavigate();\r\n  /*菜单前缀*/\r\n  const [info, setInfo] = useState<{ title: ReactNode; href: string }[]>([\r\n    {\r\n      title: (\r\n        <Fragment>\r\n          <UserOutlined />\r\n          <span>首页</span>\r\n        </Fragment>\r\n      ),\r\n      href: \"\",\r\n    },\r\n  ]);\r\n  // 下拉菜单项\r\n  const drops: MenuProps[\"items\"] = [\r\n    {\r\n      label: \"上传个人信息\",\r\n      key: \"0\",\r\n      icon: <UserSwitchOutlined />,\r\n      onClick: () => {\r\n        setCheck(true);\r\n        setShow(false);\r\n        setIsModalOpen(true);\r\n      },\r\n    },\r\n    {\r\n      label: \"信息有误？点我反馈\",\r\n      key: \"1\",\r\n      icon: <QuestionOutlined />,\r\n      onClick: () => {\r\n        setCheck(false);\r\n        setShow(false);\r\n        setIsModalOpen(true);\r\n      },\r\n    },\r\n    {\r\n      type: \"divider\",\r\n    },\r\n    {\r\n      label: `${!user.avatarPath ? \"你的头像还未上传!\" : \"\"}`,\r\n      key: \"3\",\r\n      disabled: true,\r\n    },\r\n  ];\r\n  // 菜单项\r\n  const items: MenuItem[] = [\r\n    getItem(\"患者信息\", \"患者信息\", <MailOutlined />),\r\n    getItem(\"不良患者\", \"不良患者\", <CalendarOutlined />),\r\n    getItem(\"数据管理\", \"数据管理\", <AppstoreOutlined />, [\r\n      getItem(\"添加信息\", \"添加信息\"),\r\n      getItem(\"医院管理\", \"医院管理\", null, [\r\n        getItem(\"上传报告\", \"上传报告\"),\r\n        getItem(\"查看报告\", \"查看报告\"),\r\n      ]),\r\n    ]),\r\n    getItem(<Link to={\"/chat\"}>去外面看看</Link>, \"link\", <LinkOutlined />),\r\n  ];\r\n  /*被选中*/\r\n  const menuSelected: MenuProps[\"onClick\"] = ({\r\n    keyPath,\r\n  }: {\r\n    keyPath: string[];\r\n  }) => {\r\n    const items = [];\r\n    keyPath.reverse().map((title: string) => {\r\n      items.push({ title, href: \"\" });\r\n    });\r\n    items.unshift({\r\n      title: (\r\n        <Fragment>\r\n          <UserOutlined />\r\n          <span>首页</span>\r\n        </Fragment>\r\n      ),\r\n      href: \"\",\r\n    });\r\n    setInfo(items);\r\n    switch (keyPath[keyPath.length - 1]) {\r\n      case \"患者信息\":\r\n        navigate(\"/patient/info\");\r\n        break;\r\n      case \"不良患者\":\r\n        navigate(\"bad/info\");\r\n        break;\r\n      case \"添加信息\":\r\n        navigate(`addition/${user.hospitalName}`);\r\n        break;\r\n      case \"上传报告\":\r\n        navigate(`list/${user.hospitalName}`);\r\n        break;\r\n      case \"查看报告\":\r\n        navigate(`look/${user.hospitalName}`);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    // navigate(\"/patient\");\r\n  };\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const showModal = () => {\r\n    setShow(false);\r\n    setIsModalOpen(true);\r\n  };\r\n  const blunder = (description: string) => {\r\n    api.open({\r\n      message: \"faulty!\",\r\n      description,\r\n      icon: <FrownOutlined style={{ color: \"#108ee9\" }} />,\r\n      placement: \"topLeft\",\r\n    });\r\n  };\r\n  const success = (description: string) => {\r\n    api.open({\r\n      message: \"successful\",\r\n      description,\r\n      icon: <SmileOutlined style={{ color: \"#108ee9\" }} />,\r\n      placement: \"topLeft\",\r\n    });\r\n  };\r\n  const dropClick = async () => {\r\n    if (check == true) setIsModalOpen(false);\r\n    else {\r\n      //     提交反馈\r\n      let infos = errors!.current!.resizableTextArea!.textArea!.value;\r\n      if (infos.trim().length == 0) {\r\n        return blunder(\"不能输入非法字符或者一些无效反馈\");\r\n      }\r\n      let update = await postFallback({\r\n        userId: user.userId,\r\n        hospitalId: user.hospitalId,\r\n        errors: infos,\r\n      });\r\n      if (update.statusCode == 200)\r\n        success(\"你的反馈上传成功,我们将最快通知管理员更改\");\r\n      else blunder(update.result.error);\r\n      setLoadings(true);\r\n      await new Promise((resolve) =>\r\n        setTimeout(() => {\r\n          setLoadings(false);\r\n          setIsModalOpen(false);\r\n          resolve(null);\r\n        }, 1000)\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <Flex gap=\"middle\" wrap=\"wrap\" className={\"absolute w-[100%] h-[100%]\"}>\r\n      <Layout className={\"rounded-none h-0\"}>\r\n        <Sider\r\n          width=\"25%\"\r\n          className={\"text-center leading-[120px] text-{#fff} bg-white\"}\r\n        >\r\n          <Fragment>\r\n            {contextHolder}\r\n            <Menu\r\n              className={\"w-[100%] mt-[50px]\"}\r\n              defaultSelectedKeys={[\"1\"]}\r\n              defaultOpenKeys={[\"sub1\"]}\r\n              mode={\"inline\"}\r\n              theme={\"light\"}\r\n              items={items}\r\n              onClick={menuSelected}\r\n            />\r\n          </Fragment>\r\n        </Sider>\r\n        <Layout>\r\n          <Header\r\n            className={\r\n              \"text-center text-[#fff] h-[64px] ps-[48px] pe-[48px] leading-[64px] bg-[#ffffff] relative\"\r\n            }\r\n          >\r\n            <Breadcrumb\r\n              className=\"absolute left-[20px] mt-[15px] text-[14px]\"\r\n              separator=\">\"\r\n              items={info}\r\n            />\r\n            {/* <Search /> */}\r\n            <Space\r\n              direction=\"vertical\"\r\n              size={16}\r\n              className={\"absolute right-[20px] mt-[15px] text-[14px]\"}\r\n            >\r\n              {/* 上传头像 */}\r\n              <Modal\r\n                title={\r\n                  <span className={\"text-neutral-600 \"}>\r\n                    {check ? \"上传你的头像\" : \"向管理员反馈错误信息\"}\r\n                  </span>\r\n                }\r\n                open={isModalOpen}\r\n                onCancel={() => setIsModalOpen(false)}\r\n                footer={\r\n                  <Button\r\n                    type={\"primary\"}\r\n                    loading={loadings}\r\n                    onClick={dropClick}\r\n                  >\r\n                    {check ? \"关闭\" : \"提交\"}\r\n                  </Button>\r\n                }\r\n              >\r\n                {check ? (\r\n                  <>\r\n                    <Form\r\n                      disabled={true}\r\n                      name=\"wrap\"\r\n                      labelCol={{ flex: \"110px\" }}\r\n                      labelAlign=\"left\"\r\n                      labelWrap\r\n                      wrapperCol={{ flex: 1 }}\r\n                      colon={false}\r\n                      style={{ maxWidth: 600 }}\r\n                    >\r\n                      <Form.Item\r\n                        initialValue={user.author}\r\n                        label=\"您的名字\"\r\n                        name={\"author\"}\r\n                        rules={[{ required: true }]}\r\n                      >\r\n                        <Input className={\"w-fit\"} />\r\n                      </Form.Item>\r\n\r\n                      <Form.Item\r\n                        initialValue={user.hospitalName}\r\n                        label=\"所在医院\"\r\n                        name={\"hospitalName\"}\r\n                        rules={[{ required: true }]}\r\n                      >\r\n                        <Input className={\"w-fit\"} />\r\n                      </Form.Item>\r\n                      <Form.Item\r\n                        initialValue={user.depart}\r\n                        label=\"所在科室\"\r\n                        name={\"depart\"}\r\n                        rules={[{ required: true }]}\r\n                      >\r\n                        <Input className={\"w-fit\"} />\r\n                      </Form.Item>\r\n                    </Form>\r\n                    <Dragger {...props}>\r\n                      <p className=\"ant-upload-drag-icon\">\r\n                        <InboxOutlined />\r\n                      </p>\r\n                      <p className=\"ant-upload-text\">点击上传头像信息</p>\r\n                      <p className=\"ant-upload-hint\">\r\n                        支持各种图片类型,如jpg、png等,但图片大小不宜太大,小于5M最好\r\n                      </p>\r\n                    </Dragger>\r\n                  </>\r\n                ) : (\r\n                  <Fragment>\r\n                    <TextArea\r\n                      ref={errors}\r\n                      className={\r\n                        \"break-all border-0  f-0  rounded-[1px] border-b border-b-purple-300 text-gray-400\"\r\n                      }\r\n                      placeholder=\"输入你的错误信息\"\r\n                      autoSize={{ minRows: 1 }}\r\n                    />\r\n                  </Fragment>\r\n                )}\r\n              </Modal>\r\n              <Dropdown menu={{ items: drops }}>\r\n                <Avatar\r\n                  className=\"cursor-pointer mb-10\"\r\n                  src={user.avatarPath || null}\r\n                  shape=\"square\"\r\n                  size=\"large\"\r\n                  icon={<UserOutlined />}\r\n                />\r\n              </Dropdown>\r\n            </Space>\r\n          </Header>\r\n          <Content className=\"text-center leading-[120px] text-[#fff] bg=[#ffffff] flex-shrink-0\">\r\n            <Outlet />\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"names":["Header","Sider","Content","Layout","getItem","label","key","icon","children","Dragger","Upload","App","errors","useRef","loadings","setLoadings","useState","api","contextHolder","notification","useNotification","show","setShow","check","setCheck","dispatch","useAppDispatch","user","useAppSelector","state","login","doth","props","showUploadList","maxCount","accept","name","multiple","action","concat","username","password","onChange","info","status","file","console","log","fileList","response","statusCode","success","setStatus","avatarPath","result","url","blunder","onDrop","e","dataTransfer","files","navigate","useNavigate","setInfo","title","_jsxs","Fragment","_jsx","UserOutlined","href","drops","UserSwitchOutlined","onClick","setIsModalOpen","QuestionOutlined","type","disabled","items","MailOutlined","CalendarOutlined","AppstoreOutlined","Link","to","LinkOutlined","isModalOpen","description","open","message","FrownOutlined","style","color","placement","SmileOutlined","Flex","gap","wrap","className","width","Menu","defaultSelectedKeys","defaultOpenKeys","mode","theme","_ref","keyPath","reverse","map","push","unshift","length","hospitalName","Breadcrumb","separator","Space","direction","size","Modal","onCancel","footer","Button","loading","async","infos","current","resizableTextArea","textArea","value","trim","update","postFallback","userId","hospitalId","error","Promise","resolve","setTimeout","_Fragment","Form","labelCol","flex","labelAlign","labelWrap","wrapperCol","colon","maxWidth","Item","initialValue","author","rules","required","Input","depart","InboxOutlined","TextArea","ref","placeholder","autoSize","minRows","Dropdown","menu","Avatar","src","shape","Outlet"],"sourceRoot":""}