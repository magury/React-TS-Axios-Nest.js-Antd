{"version":3,"file":"static/js/753.eba39eb5.chunk.js","mappings":"sRASA,MA0FMA,EAA4BC,IAC9B,MAAOC,EAAKC,GAAiBC,EAAAA,GAAaC,kBACpCC,GAASC,EAAAA,EAAAA,IAAgBC,GAAUA,EAAMC,MAAMC,OAE/CC,GAAWC,EAAAA,EAAAA,QAAY,MACvBC,GAAOD,EAAAA,EAAAA,QAAY,MACnBE,GAAOF,EAAAA,EAAAA,QAAY,MACnBG,GAAUH,EAAAA,EAAAA,QAAY,MACtBI,GAASJ,EAAAA,EAAAA,QAAY,MACrBK,GAAWL,EAAAA,EAAAA,QAAY,OACtBM,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,GA8DnC,OACIC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAC,SAAA,CACJpB,GACDqB,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACFC,aAAa,UACbC,IAAKhB,EACLiB,YAAY,2BACZC,MAAO,CACHC,MAAO,QACPC,YAAa,WAGrBP,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACFC,aAAa,qBACbC,IAAKd,EACLe,YAAY,2BACZC,MAAO,CAACC,MAAO,QAASC,YAAa,WAEzCP,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACFC,aAAa,oDACbC,IAAKb,EACLc,YAAY,2BACZC,MAAO,CAACC,MAAO,QAASC,YAAa,WAEzCP,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACFC,aAAa,iCACbC,IAAKZ,EACLa,YAAY,qBACZC,MAAO,CAACC,MAAO,QAASC,YAAa,WAEzCP,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACFC,aAAa,GACbC,IAAKX,EACLY,YAAY,2BACZC,MAAO,CAACC,MAAO,QAASC,YAAa,WAGzCV,EAAAA,EAAAA,MAAA,OAAKQ,MAAO,CAACG,WAAY,IAAIT,SAAA,EACzBC,EAAAA,EAAAA,KAACS,EAAAA,EAAG,CAACC,MAAM,UAASX,SAAC,0CACrBC,EAAAA,EAAAA,KAACW,EAAAA,EAAW,CACRR,IAAKV,EACLmB,IAAK,EACLC,IAAK,GACLC,MAAOpB,EACPW,MAAO,CAACE,YAAa,QACrBQ,SA9CED,GAAenB,EAASmB,KA+C5B,KAEFd,EAAAA,EAAAA,KAACgB,EAAAA,GAAM,CACHC,QA1GFC,UACV,MAAMC,EAAS,GACTC,EAAajC,EAASkC,QAAQC,MAAMR,MAAMS,OAC9B,IAAdH,GAAkBD,EAAOK,KAAK,4BAClC,MAAMC,EAAWpC,EAAKgC,QAAQC,MAAMR,MAAMS,OAC1B,IAAZE,GAAgBN,EAAOK,KAAK,4BAChC,MAAME,EAAOpC,EAAK+B,QAAQC,MAAMR,MAAMS,OAC1B,IAARG,GAAYP,EAAOK,KAAK,4BAC5B,MAAMG,EAAmBpC,EAAQ8B,QAAQC,MAAMR,MAAMS,OAC7B,IAApBI,GAAwBR,EAAOK,KAAK,sBAC3B,GAAT9B,GAAYyB,EAAOK,KAAK,4BAC5B,MAAMI,EAAQpC,EAAO6B,QAAQC,MAAMR,MAAMS,OACzC,GAAIJ,EAAOU,OAAS,EAChB,OAAOnD,EAAIoD,KAAK,CAACC,QAAQ,uCAADC,OAAWb,EAAOc,KAAK,UAAI,8BACvD,MAAM,WACFC,EAAU,OACVC,EAAM,aACNC,EAAY,cACZC,EAAa,SACbC,EAAQ,gBACRC,GACAzD,EACE0D,EAAO,CACTpB,aACAK,WACAC,OACAC,mBACAC,QACAlC,QACAwC,aACAC,SACAC,eACAC,gBACAC,WACAC,mBAEEE,QAAkCC,EAAAA,EAAAA,IAASF,GAC3B,KAAlBC,EAAIE,aACJjE,EAAIoD,KAAK,CACLC,QAAS,YAEbtD,EAAMmE,QAAQH,GAClB,EAiEYI,KAAK,UACLxC,MAAO,CAACE,YAAa,QACrBuC,MAAM9C,EAAAA,EAAAA,KAAC+C,EAAAA,EAAc,IAAGhD,SAC3B,8BAGDC,EAAAA,EAAAA,KAACgB,EAAAA,GAAM,CAACC,QAlEN+B,KACVrD,EAAS,GAETR,EAASkC,QAAQC,MAAMR,MACnBzB,EAAKgC,QAAQC,MAAMR,MACfxB,EAAK+B,QAAQC,MAAMR,MACfvB,EAAQ8B,QAAQC,MAAMR,MAClB,IAAI,EA2DY+B,KAAK,SAASC,MAAM9C,EAAAA,EAAAA,KAACiD,EAAAA,EAAa,IAAGlD,SAAC,kCAI3D,EAGnB,EAjOsBmD,KAClB,MAAMC,GAASC,EAAAA,EAAAA,OAER1E,EAAKC,GAAiBC,EAAAA,GAAaC,mBACnC2D,EAAMa,IAAWzD,EAAAA,EAAAA,UAAgCuD,GAQlDG,EAA4C,CAC9C,CAACC,MAAO,eAAMC,UAAW,KAAMC,IAAK,MAAQ,CAACF,MAAO,2BAAQC,UAAW,WAAYC,IAAK,YACxF,CAACF,MAAO,2BAAQC,UAAW,eAAgBC,IAAK,gBAAkB,CAC9DF,MAAO,eAAMC,UAAW,SAAUC,IAAK,UAE3C,CAACF,MAAO,2BAAQC,UAAW,cAAeC,IAAK,eAAiB,CAC5DF,MAAO,eAAME,IAAK,OAAQD,UAAW,OACrCE,OAAQA,CAACC,EAACC,KAAA,IAAE,KAAClC,GAAKkC,EAAA,OACd5D,EAAAA,EAAAA,KAAA6D,EAAAA,SAAA,CAAA9D,SACK2B,EAAKoC,KAAKC,IACP,IAAIrD,EAAQqD,EAAIlC,OAAS,EAAI,WAAa,QAE1C,MADY,UAARkC,IAAiBrD,EAAQ,YAEzBb,EAAAA,EAAAA,MAACY,EAAAA,EAAG,CAACC,MAAOA,EAAMX,SAAA,CACbgE,EAAIC,cAAe,MADAD,EAElB,KAGf,GAGX,CACIR,MAAO,YACPC,UAAW,YACXE,OAAQA,CAACC,EAAGM,IACDzB,EAAKX,QAAU,GAClB7B,EAAAA,EAAAA,KAACkE,EAAAA,EAAU,CACPX,MAAM,kBACNY,UAAWA,KAnCVjD,WACjB,MAAMkD,EAAU5B,EAAK6B,QAAQC,GAA8BA,EAAKC,MAAQN,EAAOM,OAC/ElB,EAAQe,GAEc,YADJI,EAAAA,EAAAA,IAAW,CAACD,KAAMN,EAAOM,QACnC5B,YAAmBjE,EAAIoD,KAAK,CAACC,QAAS,4BAAQ,EAgClC0C,CAAaR,EAAO,EACtBlE,UAEFC,EAAAA,EAAAA,KAAA,KAAGK,MAAO,CAACK,MAAO,WAAWX,SAAC,aAElC,OA0BhB,OACIF,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAC,SAAA,EACLC,EAAAA,EAAAA,KAACxB,EAAM,CAACoE,QApBA8B,IAAwC,IAAvC,OAAClF,GAAgCkF,EAC9C,MAAMjC,EAA6B,GACnCjD,EAAOsE,KAAI,CAACQ,EAAMK,KACd,MAAMjD,EAAOkD,KAAKC,MAAMP,EAAK5C,MAC7Be,EAAIjB,KAAK,CACLiC,IAAKa,EAAKlD,WACV0D,GAAIR,EAAKlD,WACTK,SAAU6C,EAAK7C,SACfW,aAAckC,EAAKlC,aACnBD,OAAQmC,EAAKnC,OACb4C,YAAaT,EAAKS,YAClBrD,OACA6C,KAAMD,EAAKC,MACb,IAENlB,EAAQZ,EAAI,IAMP9D,GACDqB,EAAAA,EAAAA,KAACgF,EAAAA,EAAK,CACFC,YAAY,EACZ3B,QAASA,EACT4B,WAAY1C,EACZnC,MAAO,CAAC8E,UAAW,aAEhB,C","sources":["components/添加信息/index.tsx"],"sourcesContent":["import React, {Fragment, useRef, useState} from \"react\";\r\nimport {Table, Tag, Input, Popconfirm, notification, InputNumber, Button} from \"antd\";\r\nimport type {ColumnsType} from \"antd/es/table\";\r\nimport {deleteUser, http, postAdds} from \"@/utility/http\";\r\nimport useMessage from \"antd/es/message/useMessage\";\r\nimport {useLoaderData} from \"react-router-dom\";\r\nimport {useAppSelector} from \"@/store/hooks\";\r\nimport {CloseOutlined, SearchOutlined} from \"@ant-design/icons\";\r\nimport {addition, Result, table} from \"@/utility/new.type\";\r\nconst App: React.FC = () => {\r\n    const loader = useLoaderData() as addition.loader[];\r\n    // 对话框\r\n    const [api, contextHolder] = notification.useNotification();\r\n    const [data, setData] = useState<addition.state.data[]>(loader);\r\n    const handleDelete = async (record: addition.state.data) => {\r\n        const newData = data.filter((item: addition.state.data) => item.uuid != record.uuid);\r\n        setData(newData);\r\n        const res = await deleteUser({uuid: record.uuid});\r\n        if (res.statusCode == 200) api.open({message: \"删除成功\"});\r\n    };\r\n    /** 字段类型 */\r\n    const columns: ColumnsType<addition.state.data> = [\r\n        {title: \"序号\", dataIndex: \"id\", key: \"id\",}, {title: \"患者姓名\", dataIndex: \"customer\", key: \"customer\",},\r\n        {title: \"医院名称\", dataIndex: \"hospitalName\", key: \"hospitalName\",}, {\r\n            title: \"科室\", dataIndex: \"depart\", key: \"depart\",\r\n        },\r\n        {title: \"创建时间\", dataIndex: \"createdDate\", key: \"createdDate\",}, {\r\n            title: \"病情\", key: \"tags\", dataIndex: \"tags\",\r\n            render: (_, {tags}) => (\r\n                <>\r\n                    {tags.map((tag) => {\r\n                        let color = tag.length > 5 ? \"geekblue\" : \"green\";\r\n                        if (tag === \"loser\") color = \"volcano\";\r\n                        return (\r\n                            <Tag color={color} key={tag}>\r\n                                {tag.toUpperCase()}{\" \"}\r\n                            </Tag>\r\n                        );\r\n                    })}\r\n                </>\r\n            ),\r\n        },\r\n        {\r\n            title: \"operation\",\r\n            dataIndex: \"operation\",\r\n            render: (_, record: addition.state.data) => {\r\n                return data.length >= 1 ? (\r\n                    <Popconfirm\r\n                        title=\"Sure to delete?\"\r\n                        onConfirm={() => {\r\n                            handleDelete(record);\r\n                        }}\r\n                    >\r\n                        <a style={{color: \"#0056b3\"}}>Delete</a>\r\n                    </Popconfirm>\r\n                ) : null;\r\n            },\r\n        },\r\n    ];\r\n    /**\r\n     * @description  更新字段函数\r\n     * @param result 字段信息\r\n     *  */\r\n    const getList = ({result}: Result<table.patient[]>) => {\r\n        const res: addition.state.data[] = [];\r\n        result.map((item, index) => {\r\n            const tags = JSON.parse(item.tags);\r\n            res.push({\r\n                key: item.customerId,\r\n                id: item.customerId,\r\n                customer: item.customer,\r\n                hospitalName: item.hospitalName,\r\n                depart: item.depart,\r\n                createdDate: item.createdDate,\r\n                tags,\r\n                uuid: item.uuid,\r\n            });\r\n        });\r\n        setData(res);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <Search getList={getList}/>\r\n            {contextHolder}\r\n            <Table\r\n                pagination={false}\r\n                columns={columns}\r\n                dataSource={data}\r\n                style={{minHeight: \"500px\"}}\r\n            />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\ninterface IProps {\r\n    getList: Function;\r\n}\r\n\r\nconst Search: React.FC<IProps> = (props) => {\r\n    const [api, contextHolder] = notification.useNotification();\r\n    const status = useAppSelector((state) => state.login.doth);\r\n    // 对话框\r\n    const hospital = useRef<any>(null);\r\n    const name = useRef<any>(null);\r\n    const main = useRef<any>(null);\r\n    const medical = useRef<any>(null);\r\n    const result = useRef<any>(null);\r\n    const frequent = useRef<any>(null);\r\n    const [times, setTimes] = useState(3);\r\n    /**\r\n     * @description 添加信息\r\n     * @returns null\r\n     */\r\n    const query = async (): Promise<void> => {\r\n        const params = [];\r\n        const customerId = hospital.current.input.value.trim();\r\n        if (customerId == \"\") params.push(\"身份证号\");\r\n        const customer = name.current.input.value.trim();\r\n        if (customer == \"\") params.push(\"患者姓名\");\r\n        const tags = main.current.input.value.trim();\r\n        if (tags == \"\") params.push(\"主要病情\");\r\n        const prescriptionDrug = medical.current.input.value.trim();\r\n        if (prescriptionDrug == \"\") params.push(\"处方药\");\r\n        if (times == 0) params.push(\"就诊次数\");\r\n        const cause = result.current.input.value.trim();\r\n        if (params.length > 0)\r\n            return api.open({message: `输入错误！！${params.join(\"、\")}不能为空`});\r\n        const {\r\n            hospitalId,\r\n            depart,\r\n            hospitalName,\r\n            hospitalLevel,\r\n            province,\r\n            hospitalAddress,\r\n        } = status;\r\n        const data = {\r\n            customerId,\r\n            customer,\r\n            tags,\r\n            prescriptionDrug,\r\n            cause,\r\n            times,\r\n            hospitalId,\r\n            depart,\r\n            hospitalName,\r\n            hospitalLevel,\r\n            province,\r\n            hospitalAddress,\r\n        };\r\n        const res:Result<table.patient> = await postAdds(data);\r\n        if (res.statusCode == 200) {\r\n            api.open({\r\n                message: \"success\",\r\n            });\r\n            props.getList(res);\r\n        }\r\n    };\r\n    /**\r\n     * @description 清除查询信息\r\n     */\r\n    const clean = (): void => {\r\n        setTimes(0);\r\n        // 清除查询信息\r\n        hospital.current.input.value =\r\n            name.current.input.value =\r\n                main.current.input.value =\r\n                    medical.current.input.value =\r\n                        null;\r\n    };\r\n    const onChange = (value: any) => setTimes(value);\r\n    return (\r\n        <Fragment>\r\n            {contextHolder}\r\n            <Input\r\n                defaultValue=\"csc0001\"\r\n                ref={hospital}\r\n                placeholder=\"身份证号\"\r\n                style={{\r\n                    width: \"200px\",\r\n                    marginRight: \"30px\",\r\n                }}\r\n            />\r\n            <Input\r\n                defaultValue=\"秦膶髇\"\r\n                ref={name}\r\n                placeholder=\"患者名称\"\r\n                style={{width: \"100px\", marginRight: \"30px\"}}\r\n            />\r\n            <Input\r\n                defaultValue=\"感冒 流鼻涕，咳嗽\"\r\n                ref={main}\r\n                placeholder=\"主要病情\"\r\n                style={{width: \"200px\", marginRight: \"30px\"}}\r\n            />\r\n            <Input\r\n                defaultValue=\"我不知道啊\"\r\n                ref={medical}\r\n                placeholder=\"处方药\"\r\n                style={{width: \"200px\", marginRight: \"30px\"}}\r\n            />\r\n            <Input\r\n                defaultValue=\"\"\r\n                ref={result}\r\n                placeholder=\"不良信息\"\r\n                style={{width: \"200px\", marginRight: \"30px\"}}\r\n            />\r\n\r\n            <div style={{marginTop: -50}}>\r\n                <Tag color=\"success\">输入就诊次数</Tag>\r\n                <InputNumber\r\n                    ref={frequent}\r\n                    min={1}\r\n                    max={10}\r\n                    value={times}\r\n                    style={{marginRight: \"30px\"}}\r\n                    onChange={onChange}\r\n                />\r\n                ;\r\n                <Button\r\n                    onClick={query}\r\n                    type=\"primary\"\r\n                    style={{marginRight: \"30px\"}}\r\n                    icon={<SearchOutlined/>}\r\n                >\r\n                    添加信息\r\n                </Button>\r\n                <Button onClick={clean} type=\"dashed\" icon={<CloseOutlined/>}>\r\n                    重新输入\r\n                </Button>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\nexport default App;\r\n"],"names":["Search","props","api","contextHolder","notification","useNotification","status","useAppSelector","state","login","doth","hospital","useRef","name","main","medical","result","frequent","times","setTimes","useState","_jsxs","Fragment","children","_jsx","Input","defaultValue","ref","placeholder","style","width","marginRight","marginTop","Tag","color","InputNumber","min","max","value","onChange","Button","onClick","async","params","customerId","current","input","trim","push","customer","tags","prescriptionDrug","cause","length","open","message","concat","join","hospitalId","depart","hospitalName","hospitalLevel","province","hospitalAddress","data","res","postAdds","statusCode","getList","type","icon","SearchOutlined","clean","CloseOutlined","App","loader","useLoaderData","setData","columns","title","dataIndex","key","render","_","_ref","_Fragment","map","tag","toUpperCase","record","Popconfirm","onConfirm","newData","filter","item","uuid","deleteUser","handleDelete","_ref2","index","JSON","parse","id","createdDate","Table","pagination","dataSource","minHeight"],"sourceRoot":""}