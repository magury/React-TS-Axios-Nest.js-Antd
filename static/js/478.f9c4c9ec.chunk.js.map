{"version":3,"file":"static/js/478.f9c4c9ec.chunk.js","mappings":"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","sources":["components/首页/index.tsx"],"sourcesContent":["import React, { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Flex,\r\n  Input,\r\n  Card,\r\n  Image,\r\n  InputRef,\r\n  Button,\r\n  Tabs,\r\n  TabsProps,\r\n  Tag,\r\n} from \"antd\";\r\nimport {\r\n  SearchOutlined,\r\n  BgColorsOutlined,\r\n  SlackSquareOutlined,\r\n  GithubOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Link, useLoaderData, useNavigate } from \"react-router-dom\";\r\nimport { getHospitalList } from \"@/utility/http\";\r\nimport { useAppDispatch } from \"@/store/hooks\";\r\nimport { setHospitalInfo } from \"@/features/hospital/hospitalSlice\";\r\nimport {chat} from \"@/utility/new.type\";\r\n\r\nconst { Header, Footer, Content } = Layout;\r\nconst { Meta } = Card;\r\nconst App: React.FC = () => {\r\n  let loader = useLoaderData() as chat.loader;\r\n  let dispatch = useAppDispatch();\r\n  const select = useRef([\"全部\", \"全部\"]);\r\n  const original = useRef(loader.hospital);\r\n  const hospitalName = useRef<InputRef>(null);\r\n  const [hospitalList, setList] = useState<chat.data[]>(loader.hospital);\r\n  const provinces = useRef(loader.province);\r\n  const navigate = useNavigate();\r\n  // 搜索框\r\n  const search = () => {\r\n    getHospitalList(hospitalName.current?.input?.value || \"医院\").then(\r\n      (res) => {\r\n        original.current = res.result;\r\n        setList(res.result);\r\n      }\r\n    );\r\n  };\r\n  const change = (state: { hospitalId: String; hospitalName: String }) => {\r\n    dispatch(setHospitalInfo(state));\r\n    navigate(\"/detail\");\r\n  };\r\n  const colorChange = (e: { target: HTMLElement }) => {\r\n    let node: HTMLElement = e.target;\r\n    let parent: ParentNode | null = node.parentNode;\r\n    let children: NodeListOf<ChildNode> = parent!.childNodes;\r\n    children.forEach((item:any, index: number) => {\r\n      item.style.setProperty(\"color\", \"black\");\r\n    });\r\n    node.style.setProperty(\"color\", \"#1677ff\");\r\n  };\r\n  /**\r\n   * @description: 筛选省份和level\r\n   * @param {any} e\r\n   * @return {*}\r\n   */\r\n  const level = (e: any): void => {\r\n    const target = e.target.getAttribute(\"id\");\r\n    colorChange(e);\r\n    const key = e.target.innerText;\r\n    if (target == \"level\") select.current[0] = key;\r\n    if (target == \"position\") select.current[2] = key;\r\n    //   更新数据\r\n    let arr = original.current;\r\n    if (select.current[0] != \"全部\") {\r\n      arr = arr.filter((item) => item.hospitalLevel == select.current[0]);\r\n    }\r\n    if (select.current[1] != \"全部\") {\r\n      arr = arr.filter((item) => item.province == select.current[1]);\r\n    }\r\n    setList(arr);\r\n  };\r\n  return (\r\n    <Flex gap=\"middle\" wrap=\"wrap\">\r\n      <Layout className={\"rounded-[8px] overflow-hidden  w-[100%] bg-black\"}>\r\n        <Header\r\n          className={\r\n            \"text-center text-[#fff] h-[64px] ps-[48px] pe-[48px] leading-[64px] bg-white fixed z-10 w-[100%]\"\r\n          }\r\n        >\r\n          <Input\r\n            className=\"border-0 rounded-none hover:border-b-purple-300 border-b border-b-purple-300 f-0\"\r\n            ref={hospitalName}\r\n            style={{ width: \"500px\", marginRight: \"0px\" }}\r\n            size=\"large\"\r\n            placeholder=\"搜索医院名称\"\r\n            prefix={<SearchOutlined />}\r\n          />\r\n\r\n          <Button\r\n            onClick={search}\r\n            className=\"focus:outline-none bg-fuchsia-100\"\r\n            type=\"text\"\r\n          >\r\n            搜索\r\n          </Button>\r\n          <Link to={\"/login\"}>\r\n            <Button\r\n              className=\"absolute right-0 h-[64px]  focus:outline-none mr-[20px]\"\r\n              type=\"link\"\r\n              danger\r\n            >\r\n              Sign in\r\n            </Button>\r\n          </Link>\r\n          <br />\r\n          <br />\r\n        </Header>\r\n        <Layout>\r\n          <Content\r\n            className={\"min-h-[120px] text-black bg-white relative pt-[64px]\"}\r\n          >\r\n            <div className=\"content\">\r\n              <span>医院</span>\r\n              <br />\r\n              <div className=\"category\">\r\n                <div className=\"title\">\r\n                  <span>等级：</span>\r\n                  <span>地区：</span>\r\n                </div>\r\n                <div className=\"other\">\r\n                  <div className=\"level\">\r\n                    {[\r\n                      \"全部\",\r\n                      \"三级甲等\",\r\n                      \"三级乙等\",\r\n                      \"二级甲等\",\r\n                      \"二级乙等\",\r\n                      \"一级\",\r\n                    ].map((item, index) => (\r\n                      <span id=\"level\" key={index} onClick={level}>\r\n                        {item}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                  <div className=\"position\">\r\n                    {[\"全部\", ...provinces.current].map((item, index) => (\r\n                      <span id=\"position\" key={index} onClick={level}>\r\n                        {item}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <br />\r\n              <div className=\"pop\">\r\n                <div className=\"myCard\">\r\n                  {hospitalList.map((item: chat.data, index) => {\r\n                    const bg = (item: any) => (\r\n                      <Fragment>\r\n                        <BgColorsOutlined /> {item.hospitalName}\r\n                      </Fragment>\r\n                    );\r\n                    return (\r\n                      <Card\r\n                        onClick={() => {\r\n                          change({\r\n                            hospitalId: item.hospitalId,\r\n                            hospitalName: item.hospitalName,\r\n                          });\r\n                        }}\r\n                        headStyle={{ color: \"#a45555\" }}\r\n                        key={index}\r\n                        title={bg(item)}\r\n                        hoverable={true}\r\n                      >\r\n                        <SlackSquareOutlined />\r\n                        &nbsp; &nbsp; {item.hospitalLevel}\r\n                      </Card>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n              <br />\r\n              <div className=\"pop\">\r\n                <Pop title={{ item1: \"医生科普\", item2: \"热门推荐 ......\" }} />\r\n                <div className=\"myCard\">\r\n                  {original.current.map((item: chat.data, index) => {\r\n                    return (\r\n                      <Card\r\n                        onClick={() =>\r\n                          change({\r\n                            hospitalId: item.hospitalId,\r\n                            hospitalName: item.hospitalName,\r\n                          })\r\n                        }\r\n                        id={item.hospitalId + \"\"}\r\n                        key={index}\r\n                        hoverable={true}\r\n                        cover={\r\n                          <img\r\n                            alt=\"example\"\r\n                            src=\"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"\r\n                          />\r\n                        }\r\n                      >\r\n                        <Meta\r\n                          title=\"图文专栏\"\r\n                          description={item.hospitalName}\r\n                        />\r\n                      </Card>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n              <br />\r\n              <div className=\"pop\">\r\n                <Pop title={{ item1: \"排行榜\", item2: \"新起之秀 ......\" }} />\r\n                <div className=\"myCard\" id=\"card\">\r\n                  {original.current.map((item: chat.data, index) => {\r\n                    return (\r\n                      <Card\r\n                        key={index}\r\n                        hoverable\r\n                        style={{ width: 240 }}\r\n                        cover={\r\n                          <img\r\n                            alt=\"example\"\r\n                            src={require(\"@/assets/images/music.png\")}\r\n                          />\r\n                        }\r\n                      >\r\n                        <Meta\r\n                          title={item.hospitalLevel}\r\n                          description={item.hospitalName}\r\n                        />\r\n                      </Card>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n              <br />\r\n              <div className=\"pop\">\r\n                <Pop\r\n                  title={{ item1: \"大家都会买\", item2: \"热卖商品 ......\" }}\r\n                />\r\n                <div className=\"myCard\">\r\n                  {[\r\n                    \"北京协和医院\",\r\n                    \"乐山第一人民医院\",\r\n                    \"西南医科大学附属医院\",\r\n                    \"北京协和医院\",\r\n                    \"乐山第一人民医院\",\r\n                    \"西南医科大学附属医院\",\r\n                  ].map((item: string, index) => {\r\n                    return (\r\n                      <div key={index} className=\"goods\">\r\n                        <Image.PreviewGroup\r\n                          items={[\r\n                            \"https://gw.alipayobjects.com/zos/antfincdn/LlvErxo8H9/photo-1503185912284-5271ff81b9a8.webp\",\r\n                          ]}\r\n                        >\r\n                          <Image\r\n                            width={200}\r\n                            src=\"https://gw.alipayobjects.com/zos/antfincdn/LlvErxo8H9/photo-1503185912284-5271ff81b9a8.webp\"\r\n                          />\r\n                        </Image.PreviewGroup>\r\n                        <span>\r\n                          <i>金属中性笔</i>\r\n                          <i>￥50</i>\r\n                        </span>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Content>\r\n        </Layout>\r\n        <Footer className={\"text-center text-[#fff]\"}>Footer</Footer>\r\n      </Layout>\r\n    </Flex>\r\n  );\r\n};\r\ninterface Props {\r\n  children?: React.ReactNode;\r\n  title?: {\r\n    item1?: String;\r\n    item2?: String;\r\n  };\r\n}\r\nconst Pop: React.FC<Props> = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <span>{props?.title?.item1}</span>\r\n      <span>{props?.title?.item2}</span>\r\n      {/* <i>(更多)</i> */}\r\n      <br />\r\n      <br />\r\n    </Fragment>\r\n  );\r\n};\r\nexport default App;\r\n"],"names":["Header","Footer","Content","Layout","Meta","Card","Pop","props","_props$title","_props$title2","_jsxs","Fragment","children","_jsx","title","item1","item2","App","loader","useLoaderData","dispatch","useAppDispatch","select","useRef","original","hospital","hospitalName","hospitalList","setList","useState","provinces","province","navigate","useNavigate","change","state","setHospitalInfo","level","e","target","getAttribute","node","parentNode","childNodes","forEach","item","index","style","setProperty","colorChange","key","innerText","current","arr","filter","hospitalLevel","Flex","gap","wrap","className","Input","ref","width","marginRight","size","placeholder","prefix","SearchOutlined","Button","onClick","search","_hospitalName$current","_hospitalName$current2","getHospitalList","input","value","then","res","result","type","Link","to","danger","map","id","hospitalId","headStyle","color","BgColorsOutlined","bg","hoverable","SlackSquareOutlined","cover","alt","src","description","require","Image","PreviewGroup","items"],"sourceRoot":""}