{"version":3,"file":"static/js/274.555568dd.chunk.js","mappings":"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","sources":["components/查看报告/index.tsx"],"sourcesContent":["import React, {Fragment, useRef, useState} from \"react\";\r\nimport {Table, Tag, Input, DatePicker, Drawer, Space, ConfigProvider, Button, notification} from \"antd\";\r\nimport type {ColumnsType} from \"antd/es/table\";\r\nimport dayjs from \"dayjs\";\r\nimport {getReport} from \"@/utility/http\";\r\nimport locale from \"antd/locale/zh_CN\";\r\nimport {CloseOutlined, SearchOutlined} from \"@ant-design/icons\";\r\nimport {analyse, table} from \"@/utility/new.type\";\r\n\r\nconst {RangePicker} = DatePicker;\r\nconst App: React.FC = () => {\r\n    const [api, contextHolder] = notification.useNotification();\r\n    const img = useRef<any>(null)\r\n    // 框\r\n    const [open, setOpen] = useState(false);\r\n    // 显示抽屉\r\n    const showDrawer = (path: string) => {\r\n        img.current.src = path\r\n        setOpen(true);\r\n    };\r\n    // 关闭抽屉\r\n    const onClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const [data, setData] = useState<analyse.data[]>([]);\r\n    const columns: ColumnsType<analyse.data> = [\r\n        {\r\n            title: \"患者姓名\",\r\n            dataIndex: \"customer\",\r\n        },\r\n        {\r\n            title: \"医院名称\",\r\n            dataIndex: \"hospitalName\",\r\n        },\r\n        {\r\n            title: \"科室\",\r\n            dataIndex: \"depart\",\r\n        },\r\n        {\r\n            title: \"创建时间\",\r\n            dataIndex: \"createdDate\",\r\n            key: \"createdDate\",\r\n        },\r\n        {\r\n            title: \"检查类别\",\r\n            dataIndex: \"tags\",\r\n            render: (_, {tags}) => (\r\n                <Fragment>\r\n                    {tags.map((tag) => {\r\n                        let color = tag.length > 5 ? \"geekblue\" : \"green\";\r\n                        if (tag === \"loser\") {\r\n                            color = \"volcano\";\r\n                        }\r\n                        return (\r\n                            <Tag color={color} key={tag}>\r\n                                {tag.toUpperCase()}\r\n                            </Tag>\r\n                        );\r\n                    })}\r\n                </Fragment>\r\n            ),\r\n        },\r\n        {\r\n            title: \"operation\",\r\n            dataIndex: \"reportPath\",\r\n            render: (_, record: analyse.data) => {\r\n                return data.length >= 1 ? (\r\n                    <a className=\"a_color\" onClick={() => showDrawer(record.reportPath)}>\r\n                        查看文件\r\n                    </a>\r\n                ) : null;\r\n            },\r\n        },\r\n    ];\r\n\r\n    const getList = (result: (table.report | any)[]) => {\r\n        result.map((item, index) => {\r\n            item.key = index + ''\r\n        })\r\n        if(result.length==0)\r\n            api.open({message:'未搜索到此人信息'})\r\n        setData(result)\r\n    }\r\n    return (\r\n        <Fragment>\r\n            {contextHolder}\r\n            <Search getList={getList}/>\r\n            <Table\r\n                pagination={false}\r\n                columns={columns}\r\n                dataSource={data}\r\n                style={{minHeight: \"500px\"}}\r\n            />\r\n            <Drawer forceRender={true} width='fit-content' title=\"报告信息\" placement=\"right\" onClose={onClose}\r\n                    open={open}>\r\n                <img ref={img} src=\"\" alt=\"\"/>\r\n            </Drawer>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\ninterface IProps {\r\n    getList: Function\r\n}\r\n\r\nconst Search: React.FC<IProps> = (props) => {\r\n    /** 日期动态初值 */\r\n    const [dataRange, setDataRange] = useState<any>([dayjs(\"2014-01-15\", \"YYYY-MM-DD\"), dayjs(\"2034-01-16\", \"YYYY-MM-DD\")])\r\n    const customerId = useRef<any>(null);\r\n    const customer = useRef<any>(null);\r\n    const query = async (): Promise<void> => {\r\n        const params = {\r\n            customerId: customerId.current.input.value,\r\n            customer: customer.current.input.value,\r\n            range: [new Date(dataRange[0]['$d']).toLocaleString(), new Date(dataRange[1]['$d']).toLocaleString()]\r\n        }\r\n        const res = await getReport(params)\r\n        props.getList(res.result)\r\n\r\n    };\r\n    const clean = (): void => {\r\n        // 清除查询信息\r\n        customer.current.input.value = customerId.current.input.value = null;\r\n\r\n    };\r\n    const onChange = (dates: any, dateStrings: [string, string]) => {\r\n        setDataRange([\r\n            dayjs(dateStrings[0], \"YYYY-MM-DD\"), dayjs(dateStrings[1], \"YYYY-MM-DD\")\r\n        ])\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Input\r\n                defaultValue={'1705331781542.4788'}\r\n                ref={customerId}\r\n                placeholder=\"身份证号\"\r\n                style={{width: \"200px\", marginRight: \"30px\"}}\r\n            />\r\n            <Input\r\n                defaultValue={'秦膶髇'}\r\n                ref={customer}\r\n                placeholder=\"姓名\"\r\n                style={{width: \"100px\", marginRight: \"30px\"}}\r\n            />\r\n            <Space direction=\"vertical\" size={12} style={{marginRight: \"30px\"}}>\r\n                <ConfigProvider locale={locale}>\r\n                    <RangePicker\r\n                        onChange={onChange}\r\n                        allowEmpty={[false, false]}\r\n                        allowClear={false}\r\n                        value={dataRange}\r\n                        defaultValue={dataRange}\r\n                    />\r\n                </ConfigProvider>\r\n            </Space>\r\n            <Button\r\n                onClick={query}\r\n                type=\"primary\"\r\n                style={{marginRight: \"30px\"}}\r\n                icon={<SearchOutlined/>}\r\n            >\r\n                查询数据\r\n            </Button>\r\n            <Button onClick={clean} type=\"dashed\" icon={<CloseOutlined/>}>\r\n                重新输入\r\n            </Button>\r\n        </Fragment>\r\n    );\r\n};\r\nexport default App;\r\n"],"names":["RangePicker","DatePicker","Search","props","dataRange","setDataRange","useState","dayjs","customerId","useRef","customer","_jsxs","Fragment","children","_jsx","Input","defaultValue","ref","placeholder","style","width","marginRight","Space","direction","size","ConfigProvider","locale","onChange","dates","dateStrings","allowEmpty","allowClear","value","Button","onClick","async","params","current","input","range","Date","toLocaleString","res","getReport","getList","result","type","icon","SearchOutlined","clean","CloseOutlined","App","api","contextHolder","notification","useNotification","img","open","setOpen","data","setData","columns","title","dataIndex","key","render","_","_ref","tags","map","tag","color","length","Tag","toUpperCase","record","className","showDrawer","path","reportPath","src","item","index","message","Table","pagination","dataSource","minHeight","Drawer","forceRender","placement","onClose","alt"],"sourceRoot":""}